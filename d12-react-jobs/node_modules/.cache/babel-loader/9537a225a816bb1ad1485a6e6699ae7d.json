{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport errorReducer from \"../reducers/errors\";\nimport favouriteReducer from \"../reducers/favourite\";\nimport jobReducer from \"../reducers/job\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport localStorage from \"redux-persist/lib/storage\";\nimport { encryptTransform } from \"redux-persist-transform-encrypt\";\nimport { useSelector, useDispatch } from \"react-redux\";\nconst persistConfig = {\n  storage: localStorage,\n  key: \"root\",\n  transforms: [encryptTransform({\n    secretKey: \"my-super-secret-key\",\n    onError: function (error) {\n      dispatch({\n        type: SET_ERROR,\n        payload: true\n      });\n    }\n  })] // this brings the whole redux store into persistency\n\n};\nconst combinedReducer = combineReducers({\n  favourite: favouriteReducer,\n  job: jobReducer,\n  error: errorReducer\n});\nconst persistedReducer = persistReducer(persistConfig, combinedReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => {\n    return getDefaultMiddleware({\n      serializableCheck: false // this shuts off the checking of non-serializable values in actions\n\n    });\n  }\n});\nconst persistedStore = persistStore(store);\nexport { store, persistedStore };","map":{"version":3,"names":["configureStore","combineReducers","errorReducer","favouriteReducer","jobReducer","persistStore","persistReducer","localStorage","encryptTransform","useSelector","useDispatch","persistConfig","storage","key","transforms","secretKey","onError","error","dispatch","type","SET_ERROR","payload","combinedReducer","favourite","job","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","persistedStore"],"sources":["/Users/nikolainiklaus/Desktop/d12-react-jobs/src/redux/store/index.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport errorReducer from \"../reducers/errors\";\r\nimport favouriteReducer from \"../reducers/favourite\";\r\nimport jobReducer from \"../reducers/job\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport localStorage from \"redux-persist/lib/storage\";\r\nimport { encryptTransform } from \"redux-persist-transform-encrypt\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst persistConfig = {\r\n  storage: localStorage,\r\n  key: \"root\",\r\n  transforms: [\r\n    encryptTransform({\r\n      secretKey: \"my-super-secret-key\",\r\n      onError: function (error) {\r\n        dispatch({\r\n          type: SET_ERROR,\r\n          payload: true,\r\n        });\r\n      },\r\n    }),\r\n  ], // this brings the whole redux store into persistency\r\n};\r\n\r\nconst combinedReducer = combineReducers({\r\n  favourite: favouriteReducer,\r\n  job: jobReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, combinedReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) => {\r\n    return getDefaultMiddleware({\r\n      serializableCheck: false,\r\n      // this shuts off the checking of non-serializable values in actions\r\n    });\r\n  },\r\n});\r\n\r\nconst persistedStore = persistStore(store);\r\nexport { store, persistedStore };\r\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,MAAMC,aAAa,GAAG;EACpBC,OAAO,EAAEL,YADW;EAEpBM,GAAG,EAAE,MAFe;EAGpBC,UAAU,EAAE,CACVN,gBAAgB,CAAC;IACfO,SAAS,EAAE,qBADI;IAEfC,OAAO,EAAE,UAAUC,KAAV,EAAiB;MACxBC,QAAQ,CAAC;QACPC,IAAI,EAAEC,SADC;QAEPC,OAAO,EAAE;MAFF,CAAD,CAAR;IAID;EAPc,CAAD,CADN,CAHQ,CAajB;;AAbiB,CAAtB;AAgBA,MAAMC,eAAe,GAAGrB,eAAe,CAAC;EACtCsB,SAAS,EAAEpB,gBAD2B;EAEtCqB,GAAG,EAAEpB,UAFiC;EAGtCa,KAAK,EAAEf;AAH+B,CAAD,CAAvC;AAMA,MAAMuB,gBAAgB,GAAGnB,cAAc,CAACK,aAAD,EAAgBW,eAAhB,CAAvC;AAEA,MAAMI,KAAK,GAAG1B,cAAc,CAAC;EAC3B2B,OAAO,EAAEF,gBADkB;EAE3BG,UAAU,EAAGC,oBAAD,IAA0B;IACpC,OAAOA,oBAAoB,CAAC;MAC1BC,iBAAiB,EAAE,KADO,CAE1B;;IAF0B,CAAD,CAA3B;EAID;AAP0B,CAAD,CAA5B;AAUA,MAAMC,cAAc,GAAG1B,YAAY,CAACqB,KAAD,CAAnC;AACA,SAASA,KAAT,EAAgBK,cAAhB"},"metadata":{},"sourceType":"module"}